use super::Rule;
use std::collections::HashSet;

lazy_static! {
    static ref VALID_RULES: HashSet<Rule> = vec![
        Rule::SciName,
        Rule::Name,
        Rule::Tail,
        // Rule::HybridFormula,
        // Rule::NamedSpeciesHybrid,
        // Rule::NamedGenusHybrid,
        Rule::SingleName,
        // Rule::NameApprox,
        // Rule::NameComp,
        // Rule::NameSpecies,
        // Rule::GenusWord,
        // Rule::InfraspGroup,
        // Rule::InfraspEpithet,
        // Rule::SpeciesEpithet,
        // Rule::Comparison,
        // Rule::Rank,
        // Rule::RankOtherUncommon,
        // Rule::RankVar,
        // Rule::RankForma,
        // Rule::RankSsp,
        Rule::SubGenusOrSuperspecies,
        Rule::SubGenus,
        Rule::UninomialCombo,
        Rule::RankUninomial,
        Rule::Uninomial,
        Rule::UninomialWord,
        // Rule::AbbrGenus,
        // Rule::Word,
        // Rule::WordApostr,
        // Rule::WordStartsWithDigit,
        // Rule::HybridChar,
        // Rule::ApproxNameIgnored,
        // Rule::Approximation,
        Rule::Authorship,
        Rule::OriginalAuthorship,
        Rule::OriginalAuthorshipComb,
        Rule::CombinationAuthorship,
        Rule::BasionymAuthorshipYearMisformed,
        Rule::BasionymAuthorshipMissingParens,
        Rule::BasionymAuthorship,
        Rule::AuthorsGroup,
        Rule::AuthorsTeam,
        Rule::AuthorSep,
        Rule::AuthorEx,
        Rule::AuthorEmend,
        Rule::Author,
        Rule::UnknownAuthor,
        Rule::AuthorWord,
        Rule::AuthorEtAl,
        Rule::AllCapsAuthorWord,
        Rule::Filius,
        Rule::AuthorPrefix,
        Rule::Year,
        Rule::YearRange,
        Rule::YearWithDot,
        Rule::YearApprox,
        Rule::YearWithPage,
        Rule::YearWithParens,
        Rule::YearWithChar,
        Rule::YearNum,
        Rule::UpperCharExtended,
        Rule::LowerCharExtended,
        Rule::ApostrOther,
        Rule::AuthorSuffix,
    ]
    .into_iter()
    .collect();
}
