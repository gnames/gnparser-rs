SciName = { SOI ~ Name ~ Tail ~ EOI }

Name = { SingleName }

Tail = { ((Sp | ";" | ",") ~ ANY*)? }

SingleName = { NameUninomial }

NameUninomial = { UninomialCombo | Uninomial }

SubGenusOrSuperspecies = { "(" ~ Sp? ~ NameLowerChar+ ~ Sp? ~ ")" }

SubGenus = { "(" ~ Sp? ~ UninomialWord ~ Sp? ~ ")" }

UninomialCombo = { UninomialCombo1 | UninomialCombo2 }
UninomialCombo1 = { UninomialWord ~ Sp? ~ SubGenus ~ (Sp? ~ Authorship)? }
UninomialCombo2 = { Uninomial ~ Sp ~ RankUninomial ~ Sp ~ Uninomial }

RankUninomial = { RankUninomialPlain | RankUninomialNotho }

RankUninomialPlain = { ("sect" | "subsect" | "trib" | "subtrib" | "subser" |
  "ser" | "subgen" | "subg" | "fam" | "subfam" |
  "supertrib") ~ ("." | &(SpaceCharEOI)) }

RankUninomialNotho = { ("notho" ~ Sp? ~ ("sect" | "gen" | "ser" | "subgeen" |
  "subgen" | "subg" | "subsect" | "subtrib")) ~ ("." | &(SpaceCharEOI)) }

Uninomial = { UninomialWord ~ (Sp ~ Authorship)? }

UninomialWord = { CapWord | TwoLetterGenus }

CapWord = { CapWordWithDash | CapWord1 }

CapWordWithDash = { CapWord1 ~ Dash ~ ( UpperAfterDash | LowerAfterDash) }

UpperAfterDash = { CapWord1 }

LowerAfterDash = { Word1 }

TwoLetterGenus = { "Ca" | "Ea" | "Ge" | "Ia" | "Io" | "Ix" | "Lo" | "Oa" |
  "Ra" | "Ty" | "Ua" | "Aa" | "Ja" | "Zu" | "La" | "Qu" | "As" | "Ba" }

Word1 = { (ASCII_ALPHA_LOWER ~ Dash)? ~ NameLowerChar ~ NameLowerChar+ }

CapWord1 = { NameUpperChar ~ NameLowerChar ~ NameLowerChar+ ~ "?"? }

NameUpperChar = { UpperChar | UpperCharExtended }

NameLowerChar = { LowerChar | LowerCharExtended | MiscodedChar }

Authorship = { (AuthorshipCombo | OriginalAuthorship) ~
               &(SpaceCharEOI | ";" | ",") }

AuthorshipCombo = { OriginalAuthorshipComb ~ (Sp? ~ CombinationAuthorship)? }

OriginalAuthorship = { AuthorsGroup }

OriginalAuthorshipComb = { BasionymAuthorshipYearMisformed |
                           BasionymAuthorship |
                           BasionymAuthorshipMissingParens }

CombinationAuthorship = { AuthorsGroup }

BasionymAuthorshipMissingParens = { MissingParensStart | MissingParensEnd }

MissingParensStart = { "(" ~ Sp? ~ AuthorsGroup }

MissingParensEnd = { AuthorsGroup ~ Sp? ~ ")" }

BasionymAuthorshipYearMisformed = { "(" ~ Sp? ~ AuthorsGroup ~ Sp? ~
                                     ")" ~ (Sp? ~ ",")? ~ Sp? ~ Year }

BasionymAuthorship = { BasionymAuthorship1 | BasionymAuthorship2Parens }

BasionymAuthorship1 = { "(" ~ Sp? ~ AuthorsGroup ~ Sp? ~ ")" }

BasionymAuthorship2Parens = { "(" ~ Sp? ~ "(" ~ Sp? ~ AuthorsGroup ~
                              Sp? ~ ")" ~ Sp? ~ ")" }

AuthorsGroup = { AuthorsTeam ~ (Sp ~ (AuthorEmend | AuthorEx) ~ AuthorsTeam)? }

AuthorsTeam = { Author ~ (AuthorSep ~ Author)* ~ (Sp? ~ ","? ~ Sp? ~ Year)? }

AuthorSep = { AuthorSep1 | AuthorSep2 }

AuthorSep1 = { Sp? ~ ("," ~ Sp)? ~ ( "&" | "et" | "and" | "apud") ~ Sp? }

AuthorSep2 = { Sp? ~ "," ~ Sp? }

AuthorEx = { ("ex" ~ "."? | "in") ~ Sp }

AuthorEmend = { "emend" ~ "."? ~ Sp }

Author = { Author1 | Author2 | UnknownAuthor }

Author1 = { Author2 ~ Sp? ~ (Filius | AuthorSuffix) }

Author2 = { AuthorWord ~ (Sp? ~ AuthorWord)* }

UnknownAuthor = { "?" | (("auct" | "anon") ~ (&(SpaceCharEOI) | ".")) }

AuthorWord = { !("bold:") ~ (AuthorEtAl | AuthorWord2 | AuthorWord3 |
               AuthorPrefix) }

AuthorEtAl = { "arg." | "et al." | ("et" | "&") ~ " al" ~ "."? }

AuthorWord2 = { AuthorWord3 ~ Dash ~ AuthorWordSoft }

AuthorWord3 = { AuthorPrefixGlued? ~ (AllCapsAuthorWord | CapAuthorWord) ~ "."? }

AuthorWordSoft = { ((AuthorUpperChar ~ (AuthorUpperChar+ | AuthorLowerChar+)) |
  AuthorLowerChar+) ~ "."? }

CapAuthorWord = { AuthorUpperChar ~ AuthorLowerChar* }

AllCapsAuthorWord = { AuthorUpperChar ~ AuthorUpperChar+ }

Filius = { "f." | "fil." | "filius" }

AuthorSuffix = { "bis" }

AuthorPrefixGlued = { ("d" | "O" | "L" | "Mc" | "M") ~ Apostrophe }

AuthorPrefix = { AuthorPrefix1 | AuthorPrefix2 }

AuthorPrefix1 = { ("ab" | "af" | "bis" | "da" | "der" | "des" |
  "den" | "del" | "della" | "dela" | "de" | "di" | "du" | "el" | "la" |
  "le" | "ter" | "van" | "d" ~ Apostrophe | "in" ~ Apostrophe ~ "t" |
  "zur" | ("von" ~ (Sp ~ ("d."| "dem"))?) | ("v" ~ (Sp ~ "d")?)) ~ &Sp }

AuthorPrefix2 = { ("v." ~ (Sp? ~ "d.")?) | Apostrophe ~ "t" }

AuthorUpperChar = {UpperChar | MiscodedChar |
  ("À" | "Á" | "Â" | "Ã" | "Ä" | "Å" |"Æ" |"Ç" |"È" |"É" |"Ê" |"Ë" |"Ì" |
   "Í" |"Î" |"Ï" |"Ð" |"Ñ" |"Ò" |"Ó" |"Ô" |"Õ" |"Ö" |"Ø" |"Ù" |"Ú" |"Û" |
   "Ü" |"Ý" |"Ć" |"Č" |"Ď" |"İ" |"Ķ" |"Ĺ" |"ĺ" |"Ľ" |"ľ" |"Ł" |"ł" |"Ņ" |
   "Ō" |"Ő" |"Œ" |"Ř" |"Ś" |"Ŝ" |"Ş" |"Š" |"Ÿ" |"Ź" |"Ż" |"Ž" |"ƒ" |"Ǿ" |
   "Ș" |"Ț") }

AuthorLowerChar = {LowerChar | MiscodedChar |
  ("à" |"á" |"â" |"ã" |"ä" |"å" |"æ" |"ç" |"è" |"é" |"ê" |"ë" |"ì" |"í" |
   "î" |"ï" |"ð" |"ñ" |"ò" |"ó" |"ó" |"ô" |"õ" |"ö" |"ø" |"ù" |"ú" |"û" |
   "ü" |"ý" |"ÿ" |"ā" |"ă" |"ą" |"ć" |"ĉ" |"č" |"ď" |"đ" |"'" |"ē" |"ĕ" |
   "ė" |"ę" |"ě" |"ğ" |"ī" |"ĭ" |"İ" |"ı" |"ĺ" |"ľ" |"ł" |"ń" |"ņ" |"ň" |
   "ŏ" |"ő" |"œ" |"ŕ" |"ř" |"ś" |"ş" |"š" |"ţ" |"ť" |"ũ" |"ū" |"ŭ" |"ů" |
   "ű" |"ź" |"ż" |"ž" |"ſ" |"ǎ" |"ǔ" |"ǧ" |"ș" |"ț" |"ȳ" |"ß") }

Year = { YearRange | YearApprox | YearWithParens | YearWithPage | YearWithDot |
  YearWithChar | YearNum }

YearRange = { YearNum ~ Dash ~ (ASCII_DIGIT+ ~ ("a" | "b" | "c" | "d" |
      "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" |
      "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "?")*) }

YearWithDot =  { YearNum ~ "." }

YearApprox  = { "[" ~ Sp? ~ YearNum ~ Sp? ~ "]" }

YearWithPage = { (YearWithChar | YearNum) ~ Sp? ~ ":" ~ "?" ~ ASCII_DIGIT+ }

YearWithParens = { "(" ~ (YearWithChar | YearNum) ~ ")" }

YearWithChar = { YearNum ~ LowerChar }

YearNum = { ("1" | "2") ~ ("0" | "7" | "8" | "9") ~ ASCII_DIGIT ~ (ASCII_DIGIT | "?") ~ "?"* }

Apostrophe = { ApostrOther | ApostrASCII }

ApostrASCII = { "'" }

ApostrOther = { "‘" | "’" }

Dash = { "-" }

MiscodedChar = { "�" }

UpperCharExtended = { "Æ" | "Œ" | "Ö" }

UpperChar = { ASCII_ALPHA_UPPER }

LowerCharExtended = { "æ" | "œ" | "à" | "â" | "å" | "ã" | "ä" | "á" | "ç" |
                         "č" | "é" | "è" | "ë" | "í" | "ì" | "ï" | "ň" | "ñ" |
                         "ñ" | "ó" | "ò" | "ô" | "ø" | "õ" | "ö" | "ú" | "ù" |
                         "ü" | "ŕ" | "ř" | "ŗ" | "ſ" | "š" | "š" | "ş" | "ž" }

LowerChar = { ASCII_ALPHA_LOWER }

SpaceCharEOI = { Sp | EOI }

Sp = { MultipleSpace | SingleSpace }

MultipleSpace = { SingleSpace ~ SingleSpace+ }

SingleSpace = { " " | OtherSpace }

OtherSpace = { "　" | " " | "\t" | "\r" | "\n" } //| "\f" | "\v" }
